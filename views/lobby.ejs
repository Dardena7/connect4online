<!DOCTYPE html>
<html>
<head>
	<title>Connect 4 Online</title>
	<meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

	<style type="text/css">
		* {
			padding: 0px;
			margin: 0px;
		}

		body {
			font-size: 14px;
			padding: 1em;
			background-color: #444;
			color: white;
		}

		h1 {
			background-color: coral;
		}

		table {
			width: 100%;
			table-layout: fixed;
			background-color: blue;
		}

		td {
			width: calc(100%/7); /* 14.28 */
		}

		.cell, .yellow, .red {
			margin: 5% auto;
			width: 70%;
			padding-top: 70%;
			border-radius: 100%;
		}

		.playable:hover {
			cursor: pointer;
		}

		.light {
			background-color: lightblue;
		}

		.cell {
			background-color: white;
		}

		.yellow {
			background-color: yellow;
		}

		.red {
			background-color: red;
		}

	</style>
</head>
<body>
	<div id='view' class='container'>
		<!-- refresh_view() -->
	</div>

	<!-- Optional JavaScript -->
	<!-- jQuery first, then Popper.js, then Bootstrap JS -->
	<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

	<script src='/socket.io/socket.io.js'></script>
	<script>

		var view_position = 'lobby';

		var lobby_view = {
			nb_players : 0,
			rooms_list : []
		}

		var room_view = "none";
		var turnStatus = "playTurn";
		var gameStatus = "run";

		var socket = io();

		socket.on('joinRoom', function(gameRoom) {
			socket.emit('joinRoom', gameRoom);
		});

		socket.on('leaveRoom', function(gameRoom) {
			socket.emit('leaveRoom', gameRoom);
		});

		socket.on('initializeView', function(data) {
			view_position = data.position;
			lobby_view.nb_players = data.nbPlayers;
			lobby_view.rooms_list = data.roomsList;
			room_view = data.room;
			refresh_view();
		});

		socket.on('updateTurnStatus', function(status) {
			turnStatus = status;
		});

		socket.on('updateNbPlayers', function(nb) {
			lobby_view.nb_players = nb;
			if(view_position == 'lobby')
				refresh_nb_players_view();
		});

		socket.on('updateLobbyRooms', function(roomsList) {
			lobby_view.rooms_list = roomsList;
			if(view_position == 'lobby')
				refresh_rooms_list_view();
		});

		socket.on('updateRoom', function(data) {
			var type = data.type;
			var room = data.room;
			if(type == 'join')
				view_position = 'room';
			else if(type == 'leave')
				view_position = 'lobby';
			else if(type == 'game')
				view_position = 'game';
			room_view = room;
			refresh_view();
		});

		socket.on('forbidden', function(msg) {
			alert(msg);
		});

		socket.on('updateGame', function(game) {
			console.log(1, game);
			room_view.game = game;
			refresh_view();
		});

		socket.on('loose', function(game) {
			turnStatus = "none";
			gameStatus = "loose";
			room_view.game = game;
			refresh_view();
		});

		socket.on('win', function(game) {
			turnStatus = "none";
			gameStatus = "win";
			room_view.game = game;
			refresh_view();
		});

		socket.on('draw', function(game) {
			turnStatus = "none";
			gameStatus = "draw";
			room_view.game = game;
			refresh_view();
		});

		socket.on('playerLeft', function(){
			view_position = 'left';
			refresh_view();
			setTimeout(function(){
				leaveRoom(room_view.roomName);
			}, 3000);
		});

		function createRoom() {
			socket.emit('createRoom');
		}

		function joinRoom(gameRoom) {
			socket.emit('tellToJoinRoom', gameRoom);
		}

		function leaveRoom(gameRoom) {
			socket.emit('tellToLeaveRoom', gameRoom);
		}

		function refresh_view() {
			var view;
			if(view_position == 'lobby')
				view = get_lobby_view();
			else if(view_position == 'room')
				view = get_room_view();
			else if(view_position == 'game')
				view = get_game_view();
			else if(view_position == 'left')
				view = get_left_view();
			$('#view').html(view);
			setEvent();
		}

		function refresh_rooms_list_view() {
			$('#rooms_list').html(get_rooms_list_view());
		}

		function refresh_nb_players_view() {
			$('#nb_players').text(lobby_view.nb_players);
		}

		function get_lobby_view() {
			var view = "";
			view += "<h1>Bienvenue sur Connect4Online</h1>";
			view += "<p>Il y a <span id='nb_players'>"+lobby_view.nb_players+"</span> joueurs connectés.</p>";
			view += "<button onclick='createRoom()' class='btn btn-primary'>Créer salon</button>";
			view += "<div id='rooms_list'>";
			view += get_rooms_list_view();
			view += "</div>";
			return view;
		}

		function get_room_view() {
			var view = "";
			view += "<h1>Vous êtes dans le salon n°"+room_view.id+"</h1>";
			view += "<p>Nombre de joueurs dans le salon : "+room_view.players.length+"/2</p>";
			if(room_view.ready)
				view += "<p>Le jeu va bientôt démarrer</p>";
			else
				view += "<button onclick='leaveRoom(\""+room_view.roomName+"\")' class='btn btn-danger'>Quitter</button>";
			return view;
		}

		function get_rooms_list_view() {
			var view = '';
			for(var i = 0; i < lobby_view.rooms_list.length; ++i){
				view += "<div style:'display : inline-block'>";
				view += "<p>Salon n°"+i+"</p>";
				if(lobby_view.rooms_list[i].isFull)
					view += "<p>Salon complet</p>";
				else
					view += "<button onclick='joinRoom(\""+lobby_view.rooms_list[i].roomName+"\")' class='btn btn-success'>Rejoindre</button>";
				view += "</div>";
			}
			return view;
		}

		function get_left_view() {
			var view = '';
			view += "<h1>Bienvenue dans le jeu</h1>";
			view += "<p>Votre adversaire a quitté la partie ! Vous allez être redirigé vers l'accueil dans quelques instants</p>";
			return view;
		}

		function get_game_view() {
			var view = "";
			view += "<h1>Bienvenue dans le jeu</h1>";
			view += getStatusMessage();
			view += "<div class='row game-container'>";
			view += "<div class='col-0 col-md-1 col-lg-2'>";
			view += "</div>";
			view += "<div class='col-12 col-md-10 col-lg-8'>";
			view += get_board_view();
			view += "</div>";

			//view += "<button onclick='blabla()'>Reee</button>";

			view += "</div>";
			return view;
		}

		function get_board_view() {
			var board = room_view.game.board;
			var view = "<table>";
			for(var y = 0; y < board[0].length; ++y){
				view += "<tr>";
				for(var x = 0; x < board.length; ++x){
					if(turnStatus == 'playTurn' && rowPlayable(x))
						view += "<td onclick='playRow("+x+")' class='playable row"+x+"' data-row='"+x+"' data-col='"+y+"'>";
					else
						view += "<td data-coord='{row: "+x+",col: "+y+"}'>";
					if(board[x][y] == 0)
						view += "<div class='cell'></div>";
					else if(board[x][y] == 1)
						view += "<div class='yellow'></div>";
					else if(board[x][y] == 2)
						view += "<div class='red'></div>";
					view += "</td>";
				}
				view += "</tr>";
			}
			view += "</table>"
			return view;
		}

		function rowPlayable(row) {
			var board = room_view.game.board;
			for(var col = 0; col < board[row].length; ++col)
				if(board[row][col] == 0)
					return true;
			return false;
		}

		function playRow(x) {
			socket.emit('playRow', parseInt(x));
		}

		function setEvent() {
			$('.playable').mouseover(function(){
				var row = $(this).data('row');
				$('td').removeClass('light');
				$('.row'+row).addClass('light');
				$('.playable').mouseout(function(){
					$('td').removeClass('light');
				});
			});
		}

		function getStatusMessage() {
			if(gameStatus != "run"){
				if(gameStatus == "win")
					return "<p class='win'>Vous avez gagné !!!</p>";
				else if(gameStatus == "loose")
					return "<p class='loose'>Vous avez perdu !!!</p>";
				else if(gameStatus == "draw")
					return "<p class='loose'>Il n'y a pas de vainqueur !!!</p>";
			}
			else {
				if(turnStatus == "playTurn")
					return "<p class='win'>C'est à votre tour de jouer.</p>";
				else
					return "<p class='win'>C'est au tou de votre adversaire de jouer.</p>";
			}
		}
		

	</script>

</body>
</html>